name: Solar System Workflow
on:
    workflow_dispatch: 
    push:
        branches: 
            - main
            - 'feature/*'
env:
    MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
    MONGO_USERNAME: ${{vars.MONGO_USERNAME}}
    MONGO_PASSWORD: ${{secrets.MONGO_PASSWORD}}
jobs:
    unit-testing:
        name: Unit Testing
        strategy:
          matrix:
            nodejs_version: [18, 19, 20]
            os: [ubuntu-latest]
        runs-on: ${{matrix.os}}
        steps:
            - name: Checkout Repository
              uses: actions/checkout@v4
            - name: Setup NodeJs (v${{matrix.nodejs_version}})
              uses: actions/setup-node@v3
              with:
                node-version: ${{matrix.nodejs_version}}
            - name: Cache npm Modules
              uses: actions/cache@v4
              with:
                path: node_modules
                key: ${{runner.os}}-node-modules-${{hashFiles('package-lock.json')}}
            - name: Install Dependencies
              run: npm install
            - name: Unit Testing
              id: unit-testing-step
              run: npm test
            - name: Archive Test Result
              if: always()
              uses: actions/upload-artifact@v4.6.2
              with:
                name: Mocha-Test-Result-${{matrix.os}}-${{matrix.nodejs_version}}
                path: test-results.xml
    code-coverage:
        name: Code Coverage
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Repository
              uses: actions/checkout@v4
            - name: Setup NodeJs (v18)
              uses: actions/setup-node@v3
              with:
                node-version: 18
            - name: Cache npm Modules
              uses: actions/cache@v4
              with:
                path: node_modules
                key: ${{runner.os}}-node-modules-${{hashFiles('package-lock.json')}}
            - name: Install Dependencies
              run: npm install
            - name: Check Code Coverage
              continue-on-error: true
              run: npm run coverage
            - name: Archive Test Result
              uses: actions/upload-artifact@v4.6.2
              with:
                name: code-coverage-result
                path: coverage
                retention-days: 5
    docker:
        name: Login to Docker and Build
        needs: [unit-testing, code-coverage]
        runs-on: ubuntu-latest
        steps:
          - name: Checkout Repository
            uses: actions/checkout@v4
          - name: Login to Docker
            uses: docker/login-action@v3.4.0
            with:
              username: ${{vars.DOCKERHUB_USERNAME}}
              password: ${{secrets.DOCKERHUB_PAT}}
          - name: Build Image
            uses: docker/build-push-action@v4
            with:
              context: .
              push: false
              tags: ${{vars.DOCKERHUB_USERNAME}}/solar-system:${{github.sha}}
          - name: Test Image
            run: |
              docker images
              docker run --name solar-system-app -d \
                -p 3000:3000 \
                -e MONGO_URI=${{env.MONGO_URI}} \
                -e MONGO_USERNAME=${{env.MONGO_USERNAME}} \
                -e MONGO_PASSWORD=${{env.MONGO_PASSWORD}} \
                ${{vars.DOCKERHUB_USERNAME}}/solar-system:${{github.sha}}
              
              export IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' solar-system-app)
              echo $IP

              echo 'Testing image URL using wget...'
              wget -q -O - localhost:3000/live | grep live
          - name: Push Image
            uses: docker/build-push-action@v4
            with:
              context: .
              push: true
              tags: ${{vars.DOCKERHUB_USERNAME}}/solar-system:${{github.sha}}